openapi: 3.0.2
info:
  title: Product API
  version: 1.0.0
  description: API endpoints for managing products
servers:
  - url: https://localhost:5000/api
    description: Local host server
paths:
  /products:
    get:
      summary: Get all products
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
    post:
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "201":
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
  "/products/{product_id}":
    get:
      summary: Get a product by ID
      parameters:
        - in: path
          name: product_id
          schema:
            type: string
          required: true
          description: ID of the product
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
    put:
      summary: Update a product
      parameters:
        - in: path
          name: product_id
          schema:
            type: string
          required: true
          description: ID of the product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
    delete:
      summary: Delete a product
      parameters:
        - in: path
          name: product_id
          schema:
            type: string
          required: true
          description: ID of the product
      responses:
        "204":
          description: Product deleted successfully
components:
  schemas:
    Product:
      type: object
      required:
        - name
        - price
        - brand
      properties:
        product_id:
          type: string
          description: The ID of the product
          example: 004564ab-997b-4b0e-98cf-7942c554d1ea
        name:
          type: string
          description: The name of the product
          example: Dark Chocolate
        price:
          type: number
          description: The price of the product
          example: 150
        brand:
          type: string
          description: The brand of the product
          example: Toblerone
    Stock:
      type: object
      properties:
        stock_id:
          type: string
          description: The ID of the stock
        product_id:
          type: string
          description: The foreign ID of the product
        qunatity:
          type: number
          description: The price of the product
        brand:
          type: string
          description: The brand of the product
        production_date:
          type: string
          description: The production date of the stock product
        expiration_date:
          type: string
          description: The expiration date of the stock product
 
    
        
